## **AES 的密钥长度、轮数和派生密钥数量**
AES（高级加密标准）支持 **三种不同的密钥长度**，对应不同的加密轮数和派生密钥数量：

| **AES 密钥长度** | **轮数（Nr）** | **派生的轮密钥数量（Nk, 32 位字）** | **需要派生的总密钥字数（Nb × (Nr+1)）** |
|--------------|------------|----------------|--------------------|
| **AES-128**（16 字节 = 128 位） | 10 轮 | 4（原始密钥）+ 40（扩展）= 44 | 44 个 32 位字（= 176 字节） |
| **AES-192**（24 字节 = 192 位） | 12 轮 | 6（原始密钥）+ 48（扩展）= 52 | 52 个 32 位字（= 208 字节） |
| **AES-256**（32 字节 = 256 位） | 14 轮 | 8（原始密钥）+ 56（扩展）= 60 | 60 个 32 位字（= 240 字节） |

---

## **AES 密钥派生（密钥扩展算法）**
AES 的 **密钥扩展（Key Expansion）** 采用 **Rijndael 密钥扩展算法**，主要用于从输入密钥生成所有的**轮密钥（Round Keys）**，以便在每一轮 AES 变换时使用。

### **1. 主要步骤**
密钥扩展算法主要基于**字（word）**单位进行操作，每个字是 **4 个字节（32 位）**。  

派生过程如下：
1. **将输入密钥作为初始密钥存入数组**。
2. **对剩余的字（Word）进行扩展**：
   - 每 **Nk 个字** 触发特殊变换（RotWord + SubWord + Rcon）。
   - 其余部分根据前一个字进行扩展。
3. **最终生成 Nb × (Nr+1) 个 4 字节的密钥字**，供 AES 各轮使用。

---

### **2. 详细步骤**
设 AES 密钥扩展生成的数组为 \( W[i] \)，其中每个 \( W[i] \) 是一个 **4 字节（32 位）** 的字，步骤如下：

#### **（1）初始化**
- 先把原始密钥存入前 **Nk** 个字，即：
  \[
  W[i] = \text{Key}[i], \quad \text{for } 0 \leq i < Nk
  \]
  其中：
  - **Nk** 是密钥长度（128-bit = 4，192-bit = 6，256-bit = 8）。
  - 初始密钥的 **Nk 个字** 直接拷贝到密钥数组。

---

#### **（2）密钥扩展**
**对于 \( i \geq Nk \)，计算 \( W[i] \)**
\[
W[i] = W[i-Nk] \oplus \text{KeyExpansionFunction}(W[i-1], i)
\]
其中：
- **如果 \( i \) 是 Nk 的整数倍**，则：
  \[
  \text{KeyExpansionFunction}(W[i-1], i) = \text{SubWord}(\text{RotWord}(W[i-1])) \oplus Rcon[i/Nk]
  \]
- **如果是 AES-256 并且 \( i \) 是 4 的倍数（但不是 8 的倍数）**：
  \[
  \text{KeyExpansionFunction}(W[i-1], i) = \text{SubWord}(W[i-1])
  \]
- **否则，直接使用 \( W[i-1] \)**：
  \[
  \text{KeyExpansionFunction}(W[i-1], i) = W[i-1]
  \]

---

### **3. 关键操作**
#### **（1）RotWord**
**循环左移 1 字节**（用于增加密钥的扩散性）：
\[
\text{RotWord}([a_0, a_1, a_2, a_3]) = [a_1, a_2, a_3, a_0]
\]
示例：
\[
\text{RotWord}([0x09, 0xCF, 0x4F, 0x3C]) = [0xCF, 0x4F, 0x3C, 0x09]
\]

#### **（2）SubWord**
**对每个字节应用 AES S-盒**（增加非线性）：
\[
\text{SubWord}([b_0, b_1, b_2, b_3]) = [S(b_0), S(b_1), S(b_2), S(b_3)]
\]

示例：
\[
\text{SubWord}([0xCF, 0x4F, 0x3C, 0x09]) = [S(0xCF), S(0x4F), S(0x3C), S(0x09)]
\]

#### **（3）轮常数（Rcon）**
Rcon（Round Constant）是一个 4 字节的数组，仅在 **每 Nk 轮** 进行变换时使用：
\[
Rcon[i] = [2^{(i-1)}, 0x00, 0x00, 0x00] \quad \text{在 GF(2⁸) 上}
\]
示例：
| 轮数 \( i \) | Rcon[i] (十六进制) |
|---------|--------------|
| 1       | 0x01 00 00 00 |
| 2       | 0x02 00 00 00 |
| 3       | 0x04 00 00 00 |
| 4       | 0x08 00 00 00 |
| 5       | 0x10 00 00 00 |
| 6       | 0x20 00 00 00 |
| 7       | 0x40 00 00 00 |
| 8       | 0x80 00 00 00 |
| 9       | 0x1B 00 00 00 |
| 10      | 0x36 00 00 00 |

---

### **4. 密钥扩展示例（AES-128）**
**输入密钥**（16 字节 = 4 个 32 位字）：
```
2b 7e 15 16  28 ae d2 a6  ab f7 89 32  a8 3c 15 66
```
**扩展后（44 个 32-bit 轮密钥字）**：
```
2b 7e 15 16  28 ae d2 a6  ab f7 89 32  a8 3c 15 66
a0 fa fe 17  88 54 2c b1  23 a3 39 39  2a 6c 76 05
f2 c2 95 f2  7a 96 b9 43  59 35 80 7a  73 59 f6 7f
...
```
（共 44 组，每轮 4 组，每组 32 位）

---

## **5. 结论**
✅ **AES 通过密钥扩展算法，从原始密钥派生出多个轮密钥**，用于各轮变换。  
✅ **AES-128 需要 44 个 32-bit 轮密钥（176 字节），AES-192 需要 52 个（208 字节），AES-256 需要 60 个（240 字节）。**  
✅ **核心步骤包括 RotWord、SubWord 和 Rcon，每 Nk 轮会触发密钥非线性变换，确保扩散和抗攻击能力。**  
✅ **AES 的密钥扩展算法确保每轮密钥不同，提高了安全性，防止相同的密钥导致重复模式。**  

**这使 AES 相比 DES 具有更强的抗攻击能力，尤其是抵抗差分和线性分析！** 🚀🔒