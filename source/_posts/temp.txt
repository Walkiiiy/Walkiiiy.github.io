In the **Tree-decoding with critique tokens** step of the **SELF-RAG** framework, the **segment score** plays a key role in ranking different possible continuations of a generated text at each step. The process involves generating multiple candidate outputs (or segments) for each step, and the **segment score** is used to determine which continuation is the best. This scoring is done based on the input, the retrieved documents, and the generated text up to that point.

### **Tree-Decoding Process Overview**:

1. **Retrieving Passages**:

   * For each segment step, when the model decides that retrieval is necessary (based on reflection tokens), the **Retriever Model (R)** retrieves a set of relevant documents.

2. **Generating Candidates**:

   * The **Generator Model (M)** processes these retrieved documents in parallel, generating different candidate continuations for the output. These candidates represent different possible ways to continue the generation.

3. **Using Critique Tokens**:

   * The **Critic Model (C)** generates **critique tokens** for each of these candidates. These critique tokens evaluate various aspects of the output, such as:

     * **ISREL (Relevance)**: Whether the retrieved passages provide relevant information for the current output.
     * **ISSUP (Support)**: Whether the generated segment is supported by the retrieved information.
     * **ISUSE (Usefulness)**: How useful the generated segment is in relation to the task at hand.

4. **Ranking the Candidates**:

   * Once the critique tokens are generated, the **segment score** is calculated to rank the generated candidates.

### **Segment Score Calculation**:

The segment score is a combination of the **generation probability** (which measures how likely a candidate continuation is according to the model) and the **critique scores** (which evaluate the quality and relevance of the generated text in relation to the retrieved passages). The segment score is calculated as follows:

1. **Generation Probability**:

   * The model assigns a probability to each candidate continuation $y_t$ (the current segment in the sequence) based on the input, retrieved passages, and previous generations. This is the probability of generating a specific continuation given the context.

   $$
   p(y_t | x, d, y<t)
   $$

   where:

   * $x$ is the input prompt,
   * $d$ is the retrieved passage,
   * $y<t$ is the previously generated text (up to the current segment).

2. **Critique Token Scores**:

   * The critique tokens $C_{\text{critique}}$ (e.g., **ISREL**, **ISSUP**, **ISUSE**) provide a score for each candidate based on how well it aligns with the retrieved evidence. Each critique token is associated with a score, which evaluates the candidate's relevance, support, and utility. The sum of these scores is used to adjust the final ranking.

3. **Final Segment Score**:

   * The final segment score is a **weighted sum** of the generation probability and the critique scores for each critique token group. The segment score for a candidate $y_t$ and retrieved passage $d$ is computed as:

   $$
   f(y_t, d, \text{Critique}) = p(y_t | x, d, y<t) + S(\text{Critique})
   $$

   where $S(\text{Critique})$ is the total score from the critique tokens, calculated as:

   $$
   S(\text{Critique}) = \sum_{G \in G_{\text{critique}}} w_G s_G(t)
   $$

   where:

   * $G_{\text{critique}}$ is the set of critique token groups (such as **ISREL**, **ISSUP**, **ISUSE**),
   * $w_G$ is a weight assigned to each critique token group (which can be adjusted during inference),
   * $s_G(t)$ is the score for the critique token group $G$ at time step $t$.

   The **weights** $w_G$ control how much influence each critique aspect (e.g., relevance, support) has on the final segment score. For example, if the goal is to prioritize factual accuracy, the weight for **ISSUP** (support) can be increased.

4. **Selecting the Best Candidate**:

   * After the segment score is calculated for all candidate continuations, the best candidate (i.e., the one with the highest segment score) is selected as the continuation for the current generation step.

### **In Summary**:

* The **segment score** combines two components: the **generation probability** of the current candidate continuation and the scores from the **critique tokens** (which evaluate relevance, support, and usefulness).
* This score is used to rank different candidate continuations generated by the model at each step, ensuring that the most relevant and supported output is selected for the next segment of the generation process.
